// Generated by view binder compiler. Do not edit!
package com.example.ebook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ebook.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView bookList;

  @NonNull
  public final RelativeLayout bottomSheet;

  @NonNull
  public final TextView btnCancel;

  @NonNull
  public final TextView btnFilter;

  @NonNull
  public final TextView btnSort;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialCardView recyclerView;

  @NonNull
  public final SearchView searchBar;

  @NonNull
  public final RelativeLayout searchView;

  private FragmentSearchBinding(@NonNull LinearLayout rootView, @NonNull RecyclerView bookList,
      @NonNull RelativeLayout bottomSheet, @NonNull TextView btnCancel, @NonNull TextView btnFilter,
      @NonNull TextView btnSort, @NonNull ProgressBar progressBar,
      @NonNull MaterialCardView recyclerView, @NonNull SearchView searchBar,
      @NonNull RelativeLayout searchView) {
    this.rootView = rootView;
    this.bookList = bookList;
    this.bottomSheet = bottomSheet;
    this.btnCancel = btnCancel;
    this.btnFilter = btnFilter;
    this.btnSort = btnSort;
    this.progressBar = progressBar;
    this.recyclerView = recyclerView;
    this.searchBar = searchBar;
    this.searchView = searchView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookList;
      RecyclerView bookList = ViewBindings.findChildViewById(rootView, id);
      if (bookList == null) {
        break missingId;
      }

      id = R.id.bottomSheet;
      RelativeLayout bottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheet == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      TextView btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnFilter;
      TextView btnFilter = ViewBindings.findChildViewById(rootView, id);
      if (btnFilter == null) {
        break missingId;
      }

      id = R.id.btnSort;
      TextView btnSort = ViewBindings.findChildViewById(rootView, id);
      if (btnSort == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      MaterialCardView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.searchBar;
      SearchView searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.searchView;
      RelativeLayout searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      return new FragmentSearchBinding((LinearLayout) rootView, bookList, bottomSheet, btnCancel,
          btnFilter, btnSort, progressBar, recyclerView, searchBar, searchView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
